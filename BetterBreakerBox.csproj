<Project Sdk="Microsoft.NET.Sdk">

  <!-- Project Properties -->
  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <AssemblyName>betterbreakerbox</AssemblyName>
    <Product>BetterBreakerBox</Product>
    <Authors>den</Authors>
    <Version>1.0.0</Version>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <!-- Debug Symbols -->
  <PropertyGroup>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <!-- dev dependencies -->
  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" PrivateAssets="all" />
    
  </ItemGroup>

  <!-- runtime dependencies -->
  <ItemGroup>
    <PackageReference Include="BepInEx.Core" Version="5.*" PrivateAssets="all" />
    <PackageReference Include="LethalCompany.GameLibs.Steam" Version="*-*" PrivateAssets="all" />
    <!-- PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="*-*" PrivateAssets="all" /-->
    <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" IncludeAssets="compile" PrivateAssets="all" />
    <PackageReference Include="Evaisa.LethalLib" Version="*-*" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="NetcodePatch" AfterTargets="PostBuildEvent">
    <Exec Command="netcode-patch &quot;$(TargetPath)&quot; @(ReferencePathWithRefAssemblies->'&quot;%(Identity)&quot;', ' ')" />
  </Target>

  <!-- Build zip archive -->
  <Target Name="PrepForPackaging" AfterTargets="NetcodePatch">
    <!-- Create a directory for prepared artifacts -->
    <MakeDir Directories="$(ProjectDir)Publish" />
    
    <!-- Copy specific files to the Publish directory -->
    <Copy SourceFiles="@(ContentToPack)" DestinationFolder="$(ProjectDir)Publish\%(RecursiveDir)" />
  </Target>

  <Target Name="Package" AfterTargets="PrepForPackaging">
    <!-- Generate a timestamp -->
    <PropertyGroup>
      <TimeStamp>$([System.DateTime]::Now.ToString("yyyyMMddHHmmss"))</TimeStamp>
    </PropertyGroup>

    <!-- Define the name of the output zip file, include -DEBUG suffix for Debug builds -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <OutputZipFileName>$(Authors)-$(AssemblyName)-$(Version)-DEBUG-$(TimeStamp).zip</OutputZipFileName>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' != 'Debug' ">
      <OutputZipFileName>$(Authors)-$(AssemblyName)-$(Version)-$(TimeStamp).zip</OutputZipFileName>
    </PropertyGroup>
    
    <!-- Zip the contents of the Publish directory -->
    <ZipDirectory SourceDirectory="$(ProjectDir)Publish" DestinationFile="$(ProjectDir)Release\$(OutputZipFileName)" />
    
    <!-- Optional: Clean up the Publish directory after packaging -->
    <RemoveDir Directories="$(ProjectDir)Publish" />
  </Target>

  <!-- Adjusted to include only the MeltdownChance.dll and specific additional files -->
  <ItemGroup>
    <ContentToPack Include="$(OutputPath)BetterBreakerBox.dll" />
    <ContentToPack Include="$(ProjectDir)README.md" />
    <ContentToPack Include="$(ProjectDir)CHANGELOG.md" />
    <ContentToPack Include="$(ProjectDir)manifest.json" />
    <ContentToPack Include="$(ProjectDir)icon.png" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Release\" />
  </ItemGroup>
  
  </Project>